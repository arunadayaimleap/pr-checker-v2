name: üß† Visual PR Review Bot

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  review:
    name: üß† Analyze PR and Post Diagrams
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      PR_NUMBER: ${{ github.event.pull_request.number }}
      REPO_NAME: ${{ github.repository }}
      IMGBB_API_KEY: ${{ secrets.IMGBB_API_KEY }}

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper diff analysis

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: üì¶ Clone Visual PR Checker
        run: |
          git clone https://github.com/arunadayaimleap/pr-checker-v2.git pr-checker

      - name: üì¶ Install Dependencies
        working-directory: pr-checker
        run: |
          npm ci --no-audit

      - name: üìù Create .env file
        run: |
          # Create .env in the main directory
          echo "OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}" > pr-checker/.env
          echo "GITHUB_TOKEN=${{ secrets.GH_TOKEN }}" >> pr-checker/.env
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> pr-checker/.env
          echo "REPO_NAME=${{ github.repository }}" >> pr-checker/.env
          echo "IMGBB_API_KEY=${{ secrets.IMGBB_API_KEY }}" >> pr-checker/.env
          
          # Create .env in src directory also
          echo "OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}" > pr-checker/src/.env
          echo "GITHUB_TOKEN=${{ secrets.GH_TOKEN }}" >> pr-checker/src/.env
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> pr-checker/src/.env
          echo "REPO_NAME=${{ github.repository }}" >> pr-checker/src/.env
          echo "IMGBB_API_KEY=${{ secrets.IMGBB_API_KEY }}" >> pr-checker/src/.env
          
          echo "Created .env files with PR number ${{ github.event.pull_request.number }}"

      - name: üîç Create PR-specific script
        run: |
          # Create a direct script that just calls our run.js file with proper params
          cat > pr-checker/direct-pr.js <<EOF
          import { getPRDetails } from './src/utils/github-utils.js';
          import processPR from './src/pr-checker.js';

          async function main() {
            try {
              console.log('üöÄ Direct PR Analysis Starting...');
              
              const prNumber = ${{ github.event.pull_request.number }};
              const repoName = '${{ github.repository }}';
              
              console.log(\`Analyzing PR #\${prNumber} from \${repoName}\`);
              
              // Get PR details from GitHub API
              const prDetails = await getPRDetails(prNumber, repoName);
              
              console.log(\`Found \${prDetails.changedFiles.length} changed files in PR\`);
              console.log(\`Files: \${prDetails.changedFiles.map(f => f.path).join(', ')}\`);
              
              // Format PR content
              const formattedPRContent = \`
          # PR #\${prNumber}: \${prDetails.title}

          \${prDetails.description}

          ## Changed Files:
          \${prDetails.changedFiles.map(file => \`- \${file.path} (\${file.status})\`).join('\\n')}

          ## File Changes:
          \${prDetails.changedFiles.map(file => \`
          ### \${file.path} (\${file.status})
          \\\`\\\`\\\`\${file.extension || 'diff'}
          \${file.diff || file.content || 'No content available'}
          \\\`\\\`\\\`
          \`).join('\\n')}
          \`;
              
              // Process the PR
              await processPR(formattedPRContent, prNumber);
              
              console.log('‚úÖ Direct PR Analysis completed successfully');
            } catch (error) {
              console.error('‚ùå Error in direct PR analysis:', error);
              process.exit(1);
            }
          }

          main();
          EOF
          
          echo "Created direct PR analysis script"

      - name: üß† Run PR Checker
        working-directory: pr-checker
        run: |
          # Export env vars directly to the shell
          export OPENROUTER_API_KEY="${{ secrets.OPENROUTER_API_KEY }}"
          export GITHUB_TOKEN="${{ secrets.GH_TOKEN }}"
          export PR_NUMBER="${{ github.event.pull_request.number }}"
          export REPO_NAME="${{ github.repository }}"
          export IMGBB_API_KEY="${{ secrets.IMGBB_API_KEY }}"
          
          # Run our direct PR script - no need to pass parameters
          node direct-pr.js

      - name: üì§ Upload PR Analysis Results
        uses: actions/upload-artifact@v4
        with:
          name: pr-analysis-results
          path: |
            pr-checker/results/**/*.md
            pr-checker/pr-review-output.md
