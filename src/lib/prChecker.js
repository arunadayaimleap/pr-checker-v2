import { analyzeChanges } from './prAnalyzer';

export async function analyzePR(prData) {
  try {
    // Extract the changed files from the PR data
    const files = prData.files || [];
    
    // Skip analysis if there are no changed files
    if (files.length === 0) {
      return {
        summary: "No files have been changed in this PR.",
        changedFiles: [],
        dependencies: [],
        success: true
      };
    }
    
    // Analyze the changes using OpenRouter
    const analysisResult = await analyzeChanges(files);
    
    return {
      summary: analysisResult.summary,
      changedFiles: files.map(file => ({
        filename: file.filename,
        status: file.status,
        additions: file.additions,
        deletions: file.deletions,
        changes: file.changes
      })),
      schemas: analysisResult.schemas,
      sequenceDiagrams: analysisResult.sequenceDiagrams,
      success: analysisResult.success
    };
  } catch (error) {
    console.error('Error in PR analysis:', error);
    return {
      summary: "Failed to analyze the PR due to an error.",
      changedFiles: [],
      dependencies: [],
      schemas: [],
      sequenceDiagrams: [],
      success: false,
      error: error.message
    };
  }
}

export async function generatePRReport(prData) {
  const analysis = await analyzePR(prData);
  
  // Generate a markdown report
  const report = `# üß† Visual PR Checker Analysis

## ü§ñ AI Summary

${analysis.summary || 'No summary available.'}

${analysis.changedFiles.length > 0 ? `
### üîß Changed Files

${analysis.changedFiles.map(file => `- ${file.filename} (${file.status}: +${file.additions} -${file.deletions})`).join('\n')}
` : ''}

${(analysis.schemas && analysis.schemas.length > 0) || (analysis.sequenceDiagrams && analysis.sequenceDiagrams.length > 0) ? `
### üìä Visual Diagrams

${analysis.schemas && analysis.schemas.length > 0 ? analysis.schemas.join('\n\n') : ''}

${analysis.sequenceDiagrams && analysis.sequenceDiagrams.length > 0 ? analysis.sequenceDiagrams.join('\n\n') : ''}
` : ''}

${!analysis.success ? `
## ‚ö†Ô∏è Analysis Error

${analysis.error || 'An unknown error occurred during analysis.'}
` : ''}

---

*Generated by [Visual PR Checker](https://github.com/yourusername/pr-checker-v2) with ‚ù§Ô∏è and üß†*`;

  return report;
}
